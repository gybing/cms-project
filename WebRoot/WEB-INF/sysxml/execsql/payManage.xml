<?xml version="1.0" encoding="UTF-8"?>
<mappers xmlns="http://www.weimingfj.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://itest.56913.com:20080/xsd/mappers.xsd">
	<!-- 新增费用类型信息 -->
	<mapper id="savePayment">
		<sql key="savePayment" operator="execute">
			INSERT INTO `sys_pay_tab` (
				`id`, `user_id`, `fee_name`, `count_type`, `pay_price`, `begin_date`, 
				`end_date`, `total`, `pay_date`, `is_completed`, `total_price`, `remark`, 
				`is_del`, `create_date`, `op_user_id`
			) VALUES (
				UUID(), #{user_id}, #{fee_name}, #{count_type}, ${pay_price}, #{begin_date}, 
				#{end_date}, ${total}, #{pay_date}, #{is_completed}, ${pay_price}*${total}, #{remark}, 
				'N', now(), '$_CRU_USER_ID_$');
		</sql>
	</mapper>
	<!-- 更新费用类型信息 -->
	<mapper id="updateFeeType">
		<sql key="updateFeeType" operator="execute">
			UPDATE `sys_fee_tab`
				SET 
				 `fee_type_code` = #{fee_type_code},
				 `type_name` = #{type_name},
				 `pay_way` = #{pay_way},
				 `count_type` = #{count_type},
				 `pay_type` = #{pay_type},
				 `pay_cycle` = #{pay_cycle},
				 `cycle_unit` = #{cycle_unit},
				 `pay_price` = #{pay_price}
				WHERE
					(
						`id` = #{f_id}
					);
		</sql>
	</mapper>
	<!-- 删除费用类型信息 -->
	<mapper id="delfeeTypeInfo">
		<sql key="delfeeTypeInfo" operator="execute">
			update sys_fee_tab set is_del = 'Y' where id = #{f_id}
		</sql>
	</mapper>
	<!-- 获取费用类型信息 -->
	<mapper id="getFeeTypeInfo">
		<sql key="getFeeTypeInfo" operator="select" resultType="map">
			select `fee_type_code`, `type_name`, `pay_way`, `count_type`, `pay_type`, `pay_cycle`, `cycle_unit`, `pay_price`, `is_del`, `create_date`,
				(SELECT dc.text FROM dict_common dc WHERE dc.`code` = count_type AND dc.type = 'COUNT_TYPE') s_count_type
				from `sys_fee_tab` where 1=1
			<isNotEmpty property="fee_id">
				and id = #{fee_id}
			</isNotEmpty>
		</sql>
	</mapper>

	<!-- 缴费登记信息列表 -->
	<mapper id="qryPaymentList">
		<sql key="qryPaymentList" operator="select" resultType="paging">
			<isNotEmpty property="query_count">
				select count(distinct sp.id)
			</isNotEmpty>
			<isEmpty property="query_count">
				select (@i:=@i+1) num,a.* from (
				select 	sp.`id`,
						su.user_name,
						su.move_addr,
						sp.`fee_name`,
						sp.`count_type`,
						sp.`pay_price`,
						DATE_FORMAT(sp.`begin_date`,'%Y-%m-%d') `begin_date`,
						DATE_FORMAT(sp.`end_date`,'%Y-%m-%d') `end_date`,
						sp.`total`,
						DATE_FORMAT(sp.`pay_date`,'%Y-%m-%d %T') `pay_date`,
						sp.`is_completed`,
						sp.`total_price`,
						sp.`remark`,
						sp.`is_del`,
						DATE_FORMAT(sp.`create_date`,'%Y-%m-%d %T') `create_date`,
						(SELECT ut.USER_NAME FROM user_tab ut WHERE ut.USER_ID = sp.`op_user_id`) op_user
			</isEmpty>
			from sys_pay_tab sp 
			LEFT JOIN sys_user_tab su ON su.user_id = sp.user_id
			where 1=1 and sp.is_del = 'N'
			<isNotEmpty property="columns[0][search][value]">
				and sft.fee_type_code LIKE '%${columns[0][search][value]}%'
			</isNotEmpty>
			<isNotEmpty property="columns[1][search][value]">
				and sft.type_name LIKE '%${columns[1][search][value]}%'
			</isNotEmpty>
			<isEmpty property="query_count">
				order by sp.create_date desc
				limit ${page_start},${page_end}
				) a,(select @i:= ${page_start} ) it
			</isEmpty>
		</sql>
	</mapper>
</mappers>